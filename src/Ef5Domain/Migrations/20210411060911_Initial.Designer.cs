// <auto-generated />
using System;
using Ef5Domain.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ef5Domain.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210411060911_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SharedDomain.Models.AccountModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_Account_Id")
                        .IsClustered();

                    b.HasAlternateKey("Document")
                        .HasName("AK_Account_Document");

                    b.ToTable("account");

                    b.HasData(
                        new
                        {
                            Id = new Guid("def31d5b-dcb0-46fa-89c7-aba0bcfdb55c"),
                            Document = "491.265.159-11",
                            FirstName = "Maitê",
                            Gender = (byte)1,
                            LastName = "Baptista"
                        },
                        new
                        {
                            Id = new Guid("3950a3b2-47ab-459e-bf44-f1c3065e0dfb"),
                            Document = "086.198.466-80",
                            FirstName = "Débora",
                            Gender = (byte)1,
                            LastName = "Clarice"
                        },
                        new
                        {
                            Id = new Guid("52675719-09be-458e-8d0f-ae05d8629ec2"),
                            Document = "378.952.762-98",
                            FirstName = "Ayla",
                            Gender = (byte)1,
                            LastName = "Ribeiro"
                        },
                        new
                        {
                            Id = new Guid("3762db4a-8681-44d4-9ca6-bd9e0540d74f"),
                            Document = "139.582.121-66",
                            FirstName = "Pietra",
                            Gender = (byte)1,
                            LastName = "Conceição"
                        },
                        new
                        {
                            Id = new Guid("8cd6bcf9-53a7-49ac-aa0d-f230b0e05afe"),
                            Document = "408.435.312-40",
                            FirstName = "Gabrielly",
                            Gender = (byte)1,
                            LastName = "Viana"
                        },
                        new
                        {
                            Id = new Guid("c6da9a85-e385-455b-a217-aff60a26c122"),
                            Document = "876.283.990-02",
                            FirstName = "Thiago",
                            Gender = (byte)0,
                            LastName = "Godinho"
                        },
                        new
                        {
                            Id = new Guid("8108185d-caf6-47b9-bd83-187a51f2c9c2"),
                            Document = "166.169.248-66",
                            FirstName = "Marcos",
                            Gender = (byte)0,
                            LastName = "Sebastião"
                        },
                        new
                        {
                            Id = new Guid("d6cd8238-873a-4b7a-a4b8-72c298b69e41"),
                            Document = "654.928.314-02",
                            FirstName = "André",
                            Gender = (byte)0,
                            LastName = "Cunha"
                        },
                        new
                        {
                            Id = new Guid("d48e1805-c298-4059-9fc3-8c8326a52f3a"),
                            Document = "732.599.674-86",
                            FirstName = "Thomas",
                            Gender = (byte)0,
                            LastName = "Rodrigues"
                        },
                        new
                        {
                            Id = new Guid("7ba1b661-db11-4058-8a3e-1494c7fb9891"),
                            Document = "084.356.860-78",
                            FirstName = "Kaique",
                            Gender = (byte)0,
                            LastName = "Almada"
                        },
                        new
                        {
                            Id = new Guid("b61d5d4d-c1f9-41c2-8323-2b11d9f64f52"),
                            Document = "529.480.900-16",
                            FirstName = "Benício",
                            Gender = (byte)0,
                            LastName = "Paschoalin"
                        });
                });

            modelBuilder.Entity("SharedDomain.Models.Associative.AccountProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_AccountProfile_Id");

                    b.HasAlternateKey("AccountId", "ProfileId")
                        .HasName("AK_AccountProfile_AccountIdProfileId")
                        .IsClustered();

                    b.HasIndex("ProfileId");

                    b.ToTable("account_profile");

                    b.HasData(
                        new
                        {
                            Id = new Guid("78213aef-d461-4837-9248-af2d03267e15"),
                            AccountId = new Guid("c6da9a85-e385-455b-a217-aff60a26c122"),
                            ProfileId = new Guid("f732b923-4be5-4a05-876f-aa7cbf38bfa6")
                        },
                        new
                        {
                            Id = new Guid("d1c0db63-fed6-431e-a6c0-3c2d5e853e30"),
                            AccountId = new Guid("8108185d-caf6-47b9-bd83-187a51f2c9c2"),
                            ProfileId = new Guid("10fae454-f200-41ce-b18f-112977ac18c1")
                        },
                        new
                        {
                            Id = new Guid("4b64c960-cfeb-4268-be7c-d9fa1f98347b"),
                            AccountId = new Guid("d6cd8238-873a-4b7a-a4b8-72c298b69e41"),
                            ProfileId = new Guid("10fae454-f200-41ce-b18f-112977ac18c1")
                        },
                        new
                        {
                            Id = new Guid("d1832a87-4786-4684-8b62-4d785e0cf566"),
                            AccountId = new Guid("d48e1805-c298-4059-9fc3-8c8326a52f3a"),
                            ProfileId = new Guid("10fae454-f200-41ce-b18f-112977ac18c1")
                        },
                        new
                        {
                            Id = new Guid("b78fd645-eef1-4d8d-9066-44438f23766c"),
                            AccountId = new Guid("7ba1b661-db11-4058-8a3e-1494c7fb9891"),
                            ProfileId = new Guid("10fae454-f200-41ce-b18f-112977ac18c1")
                        },
                        new
                        {
                            Id = new Guid("db3a7515-ef0a-42c3-8306-26b22dcb752d"),
                            AccountId = new Guid("def31d5b-dcb0-46fa-89c7-aba0bcfdb55c"),
                            ProfileId = new Guid("957f86a0-fb9a-4c2f-9f25-945ef4538ce5")
                        },
                        new
                        {
                            Id = new Guid("92817be0-e69f-4ec2-9a9a-9236ac7fa257"),
                            AccountId = new Guid("3950a3b2-47ab-459e-bf44-f1c3065e0dfb"),
                            ProfileId = new Guid("957f86a0-fb9a-4c2f-9f25-945ef4538ce5")
                        },
                        new
                        {
                            Id = new Guid("ebd4b227-d0c3-4b9b-bc61-2299284d0752"),
                            AccountId = new Guid("52675719-09be-458e-8d0f-ae05d8629ec2"),
                            ProfileId = new Guid("957f86a0-fb9a-4c2f-9f25-945ef4538ce5")
                        },
                        new
                        {
                            Id = new Guid("879ec6cb-80cd-4525-80ec-1fc86ed24a99"),
                            AccountId = new Guid("3762db4a-8681-44d4-9ca6-bd9e0540d74f"),
                            ProfileId = new Guid("957f86a0-fb9a-4c2f-9f25-945ef4538ce5")
                        },
                        new
                        {
                            Id = new Guid("d723a151-f605-4097-b25a-2b892170d453"),
                            AccountId = new Guid("8cd6bcf9-53a7-49ac-aa0d-f230b0e05afe"),
                            ProfileId = new Guid("957f86a0-fb9a-4c2f-9f25-945ef4538ce5")
                        });
                });

            modelBuilder.Entity("SharedDomain.Models.ProfileModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_Profile_Id")
                        .IsClustered();

                    b.ToTable("profile");

                    b.HasData(
                        new
                        {
                            Id = new Guid("10fae454-f200-41ce-b18f-112977ac18c1"),
                            Name = "Aluno"
                        },
                        new
                        {
                            Id = new Guid("957f86a0-fb9a-4c2f-9f25-945ef4538ce5"),
                            Name = "Professor"
                        },
                        new
                        {
                            Id = new Guid("f732b923-4be5-4a05-876f-aa7cbf38bfa6"),
                            Name = "Gestor"
                        });
                });

            modelBuilder.Entity("SharedDomain.Models.Associative.AccountProfile", b =>
                {
                    b.HasOne("SharedDomain.Models.AccountModel", "Account")
                        .WithMany("Profiles")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedDomain.Models.ProfileModel", "Profile")
                        .WithMany("Accounts")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("SharedDomain.Models.AccountModel", b =>
                {
                    b.Navigation("Profiles");
                });

            modelBuilder.Entity("SharedDomain.Models.ProfileModel", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
